---
 - name:
   hosts: localhost
   connection: local
   gather_facts: False
   tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
   vars:
     instance_type: t2.micro
     security_group: sg-2642c74c # Change the security group name here
     image: ami-8c122be9 # Enter ur AMI here 
     keypair: your_key # Key pair
     region: us-east-2 # Change the Region
     count: 1
     targetgroup: hello
     elb: anselb
     vpc: vpc-xxxxx # enter your VPC id
     subnet-id: subnet-xxxxx # enter your subnet id
     security_group: sg-xxxxxx # enter your security group
    # Task that will be used to Launch/Create an EC2 Instance
   tasks:

     - name: Launch the new EC2 Instance
       ec2:
         group_id: "{{ security_group }}"
         instance_type: "{{ instance_type}}"
         image: "{{ image }}"
         wait: true
         vpc_subnet_id: "{{ subnet-id}}" 
         region: "{{ region }}"
         key_name: "{{ keypair }}"
     #   counti: "{{count}}"
         state: present
          #     assign_public_ip: yes
       register: ec2
     - elb_target_group:
         name: "{{ targetgroup }}"
         protocol: http
         port: 80
         vpc_id: "{{ vpc }}"
         target_type: instance
         targets:
           - Id: "{{ item.id }}"
             Port: 80 
         state: present 
       with_items:
         - "{{ec2.instances}}"
     - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
       add_host:
         name: "{{ item.public_ip}}"
         groups: webserver
       with_items:
         - "{{ ec2.instances }}"
     - name: Wwait for ssh to come up
       local_action:
         module: wait_for
         host: "{{ item.public_ip }}"
         port: 22
         state: started
         timeout: 200
       with_items:
         - "{{ ec2.instances }}"      
     - elb_application_lb:
         name: "{{ elb }}"
         security_groups:
           - "{{ securit_group }}"
         subnets:
           - subnet-xxxxx    #subnets in diff region
           - subnet-xxxxx    # subnets in diff region
         state: present
         listeners:
           - Protocol: HTTP
             Port: 80
             DefaultActions:
               - Type: forward
                 TargetGroupName: "{{ targetgroup }}"  
           - Protocol: HTTPS
             Port: 443
             SslPolicy: ELBSecurityPolicy-2016-08
             Certificates:
               - CertificateArn: arn:aws:iam::159392501451:server-certificate/ansiblecert 
             DefaultActions:
               - Type: forward
                 TargetGroupName: "{{ targetgroup }}"
                 # - name: wait for ec2 creation
           #     wait_for_connection:
 - name: configure instance
   hosts: all 
   remote_user: ec2-user
   # sudo: yes
   become: true
   roles:
     - apache_ins
